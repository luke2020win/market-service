<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.joiest.market.pay.api.mapper.PayPcaMapper" >
  <resultMap id="BaseResultMap" type="com.joiest.market.pay.api.entity.generate.PayPca" >
    <id column="catid" property="catid" jdbcType="INTEGER" />
    <result column="pid" property="pid" jdbcType="INTEGER" />
    <result column="catpath" property="catpath" jdbcType="VARCHAR" />
    <result column="catpath_cn" property="catpathCn" jdbcType="VARCHAR" />
    <result column="cat" property="cat" jdbcType="VARCHAR" />
    <result column="code" property="code" jdbcType="VARCHAR" />
    <result column="postcode" property="postcode" jdbcType="VARCHAR" />
    <result column="phonecode" property="phonecode" jdbcType="VARCHAR" />
    <result column="xuhao" property="xuhao" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    catid, pid, catpath, catpath_cn, cat, code, postcode, phonecode, xuhao
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.joiest.market.pay.api.entity.generate.PayPcaExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from pay_pca
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from pay_pca
    where catid = #{catid,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from pay_pca
    where catid = #{catid,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.joiest.market.pay.api.entity.generate.PayPcaExample" >
    delete from pay_pca
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.joiest.market.pay.api.entity.generate.PayPca" >
    insert into pay_pca (catid, pid, catpath, 
      catpath_cn, cat, code, 
      postcode, phonecode, xuhao
      )
    values (#{catid,jdbcType=INTEGER}, #{pid,jdbcType=INTEGER}, #{catpath,jdbcType=VARCHAR}, 
      #{catpathCn,jdbcType=VARCHAR}, #{cat,jdbcType=VARCHAR}, #{code,jdbcType=VARCHAR}, 
      #{postcode,jdbcType=VARCHAR}, #{phonecode,jdbcType=VARCHAR}, #{xuhao,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.joiest.market.pay.api.entity.generate.PayPca" >
    insert into pay_pca
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="catid != null" >
        catid,
      </if>
      <if test="pid != null" >
        pid,
      </if>
      <if test="catpath != null" >
        catpath,
      </if>
      <if test="catpathCn != null" >
        catpath_cn,
      </if>
      <if test="cat != null" >
        cat,
      </if>
      <if test="code != null" >
        code,
      </if>
      <if test="postcode != null" >
        postcode,
      </if>
      <if test="phonecode != null" >
        phonecode,
      </if>
      <if test="xuhao != null" >
        xuhao,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="catid != null" >
        #{catid,jdbcType=INTEGER},
      </if>
      <if test="pid != null" >
        #{pid,jdbcType=INTEGER},
      </if>
      <if test="catpath != null" >
        #{catpath,jdbcType=VARCHAR},
      </if>
      <if test="catpathCn != null" >
        #{catpathCn,jdbcType=VARCHAR},
      </if>
      <if test="cat != null" >
        #{cat,jdbcType=VARCHAR},
      </if>
      <if test="code != null" >
        #{code,jdbcType=VARCHAR},
      </if>
      <if test="postcode != null" >
        #{postcode,jdbcType=VARCHAR},
      </if>
      <if test="phonecode != null" >
        #{phonecode,jdbcType=VARCHAR},
      </if>
      <if test="xuhao != null" >
        #{xuhao,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.joiest.market.pay.api.entity.generate.PayPcaExample" resultType="java.lang.Integer" >
    select count(*) from pay_pca
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update pay_pca
    <set >
      <if test="record.catid != null" >
        catid = #{record.catid,jdbcType=INTEGER},
      </if>
      <if test="record.pid != null" >
        pid = #{record.pid,jdbcType=INTEGER},
      </if>
      <if test="record.catpath != null" >
        catpath = #{record.catpath,jdbcType=VARCHAR},
      </if>
      <if test="record.catpathCn != null" >
        catpath_cn = #{record.catpathCn,jdbcType=VARCHAR},
      </if>
      <if test="record.cat != null" >
        cat = #{record.cat,jdbcType=VARCHAR},
      </if>
      <if test="record.code != null" >
        code = #{record.code,jdbcType=VARCHAR},
      </if>
      <if test="record.postcode != null" >
        postcode = #{record.postcode,jdbcType=VARCHAR},
      </if>
      <if test="record.phonecode != null" >
        phonecode = #{record.phonecode,jdbcType=VARCHAR},
      </if>
      <if test="record.xuhao != null" >
        xuhao = #{record.xuhao,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update pay_pca
    set catid = #{record.catid,jdbcType=INTEGER},
      pid = #{record.pid,jdbcType=INTEGER},
      catpath = #{record.catpath,jdbcType=VARCHAR},
      catpath_cn = #{record.catpathCn,jdbcType=VARCHAR},
      cat = #{record.cat,jdbcType=VARCHAR},
      code = #{record.code,jdbcType=VARCHAR},
      postcode = #{record.postcode,jdbcType=VARCHAR},
      phonecode = #{record.phonecode,jdbcType=VARCHAR},
      xuhao = #{record.xuhao,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.joiest.market.pay.api.entity.generate.PayPca" >
    update pay_pca
    <set >
      <if test="pid != null" >
        pid = #{pid,jdbcType=INTEGER},
      </if>
      <if test="catpath != null" >
        catpath = #{catpath,jdbcType=VARCHAR},
      </if>
      <if test="catpathCn != null" >
        catpath_cn = #{catpathCn,jdbcType=VARCHAR},
      </if>
      <if test="cat != null" >
        cat = #{cat,jdbcType=VARCHAR},
      </if>
      <if test="code != null" >
        code = #{code,jdbcType=VARCHAR},
      </if>
      <if test="postcode != null" >
        postcode = #{postcode,jdbcType=VARCHAR},
      </if>
      <if test="phonecode != null" >
        phonecode = #{phonecode,jdbcType=VARCHAR},
      </if>
      <if test="xuhao != null" >
        xuhao = #{xuhao,jdbcType=INTEGER},
      </if>
    </set>
    where catid = #{catid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.joiest.market.pay.api.entity.generate.PayPca" >
    update pay_pca
    set pid = #{pid,jdbcType=INTEGER},
      catpath = #{catpath,jdbcType=VARCHAR},
      catpath_cn = #{catpathCn,jdbcType=VARCHAR},
      cat = #{cat,jdbcType=VARCHAR},
      code = #{code,jdbcType=VARCHAR},
      postcode = #{postcode,jdbcType=VARCHAR},
      phonecode = #{phonecode,jdbcType=VARCHAR},
      xuhao = #{xuhao,jdbcType=INTEGER}
    where catid = #{catid,jdbcType=INTEGER}
  </update>
</mapper>